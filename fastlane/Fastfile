update_fastlane

default_platform(:ios)

platform :ios do
  before_all do |lane, options|
    app_identifiers = [
      "relevant.fruit.zeplin",
      "relevant.fruit.zeplin.NotificationService"
    ]

    setup_ci
    match(app_identifier: app_identifiers)
  end

  lane :certificates do
    get_push_certificate
    match(type: "development", app_identifier: ["relevant.fruit.zeplin", "relevant.fruit.zeplin.NotificationService"])
    match(type: "appstore", app_identifier: ["relevant.fruit.zeplin", "relevant.fruit.zeplin.NotificationService"])
  end

  lane :build do
    cocoapods
    analyze_commits(match: "*")
    next_version = lane_context[SharedValues::RELEASE_NEXT_VERSION]

    increment_version_number(version_number: next_version)
    increment_build_number
    commit_version_bump(xcodeproj: "zeplin.xcodeproj", message: "chore: release #{next_version}/#{get_build_number} [skip ci]")

    gym(scheme: "zeplin",
      export_method: "app-store",
      silent: true,
      workspace: "zeplin.xcworkspace",
      xcargs: "-parallelizeTargets",
      configuration: "Release")

    changelog = conventional_changelog(title: "Zeplin Client", format: 'plain')

    set_changelog(changelog: changelog, 
      app_identifier: "relevant.fruit.zeplin", 
      version: next_version)

    testflight(changelog: changelog,
      skip_submission: true,
      skip_waiting_for_build_processing: false,
      uses_non_exempt_encryption: true,
      expire_previous_builds: true)

    post_deploy(version_number: next_version, build_number: get_build_number)
    inform_sentry(version_number: next_version)
  end

  desc "Generates release notes for slack and create the next tag"
  lane :post_deploy do |options|
    notes = conventional_changelog(title: "Zeplin", format: "slack")
    markdownChangelog = conventional_changelog(title: "Zeplin", format: "markdown")

    tag_name = "#{options.version_number}/#{options.build_number}"
    add_git_tag(tag: tag_name, message: markdownChangelog)
    push_to_git_remote
    set_github_release(tag_name: options.version_number, name: tag_name, description: markdownChangelog)
    slack(message: notes)
  end

  desc "Upload DSYM and release on Sentry"
  lane :inform_sentry do |options|
    sentry_upload_dsym(
      project_slug: 'zeplin',
      dsym_path: './Zeplin.dSYM.zip',
    )

    sentry_create_release(
      version: options.version_number,
      app_identifier: "relevant.fruit.zeplin",
      finalize: true
    )

    sentry_set_commits(
      version: options.version_number,
      app_identifier: "relevant.fruit.zeplin",
      auto: true,
      clear: false,
      commit: "$VERSION"
    )
  end

  desc "Release application to AppStore"
  lane :release do
    sync_code_signing(type: "appstore")  # see code signing guide for more information
    build_app(scheme: "MyApp")
    upload_to_app_store                  # upload your app to App Store Connect
    slack(message: "Successfully uploaded a new App Store build")
  end
end
